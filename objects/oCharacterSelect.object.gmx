<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();
audio_play_sound(mCharacterSelectTheme,0,1);

oGame.backTimer = 0;

xMiddle = 960;
yMiddle = 576;

cursor[0] = -1;
cursor[1] = -1;
cursor[2] = -1;
cursor[3] = -1;

timerIn  = 0;
timerOut = 0;
duration = 30;
delay    = 0;

alpha      = 1;
scaleStart = 1;
scaleRate  = 1;
scaleEnd   = 1;
confirm = false
numLockedIn = 0;
for (var i = 0; i &lt; 4; i++) {
    if (oGame.characterSelected[i] != -1) numLockedIn++;
}

for (var i = 7; i &gt;= 0; i--) {
    scale[i] = scaleStart;
}
for (var i = 15; i &gt;= 0; i--) {
    pos[i] = -200;
}

/*
 * Order the frames are stored only relavent if using delay on animation
 */
randomFrame  = 0;
jacksonFrame = 1;
sawyerFrame  = 2;
aliFrame     = 3;
nolanFrame   = 4;
jasonFrame   = 5;
benFrame     = 6;
hansenFrame  = 7;

/****************************************
 * Coordinates of character thumbnails
 ****************************************/
// Random portrait
endPosition  [2*randomFrame]   = xMiddle;
endPosition  [2*randomFrame+1] = yMiddle;
startPosition[2*randomFrame]   = xMiddle;
startPosition[2*randomFrame+1] = 1157;

// Jackson portrait
endPosition  [2*jacksonFrame]   = xMiddle - 153;
endPosition  [2*jacksonFrame+1] = yMiddle + 84;
startPosition[2*jacksonFrame]   = -85;
startPosition[2*jacksonFrame+1] = 1157;

// Sawyer portrait
endPosition  [2*sawyerFrame]   = xMiddle - 309;
endPosition  [2*sawyerFrame+1] = yMiddle;
startPosition[2*sawyerFrame]   = -85;
startPosition[2*sawyerFrame+1] = yMiddle;

// Ali portrait
endPosition  [2*aliFrame]   = xMiddle - 153;
endPosition  [2*aliFrame+1] = yMiddle - 84;
startPosition[2*aliFrame]   = -85;
startPosition[2*aliFrame+1] = -77;

// Nolan portrait
endPosition  [2*nolanFrame]   = xMiddle;
endPosition  [2*nolanFrame+1] = yMiddle - 170;
startPosition[2*nolanFrame]   = xMiddle;
startPosition[2*nolanFrame+1] = -77;

// Jason Portrait
endPosition  [2*jasonFrame]   = xMiddle + 153;
endPosition  [2*jasonFrame+1] = yMiddle - 84;
startPosition[2*jasonFrame]   = 2005;
startPosition[2*jasonFrame+1] = -77;

// Ben portrait
endPosition  [2*benFrame]   = xMiddle + 309;
endPosition  [2*benFrame+1] = yMiddle;
startPosition[2*benFrame]   = 2005;
startPosition[2*benFrame+1] = yMiddle;

// Hansen portrait
endPosition  [2*hansenFrame]   = xMiddle  + 153;
endPosition  [2*hansenFrame+1] = yMiddle + 84;
startPosition[2*hansenFrame]   = 2005;
startPosition[2*hansenFrame+1] = 1157;

// Create character frames
for (var i = 0; i &lt; 8; i++) {
    frame[i] = instance_create(startPosition[i], startPosition[i+1], oCharacterFrame);
    frame[i].frameNum = i;
    if (oGame.characterSelected[0] == i) frame[i].selectArray[0] = 1;
    if (oGame.characterSelected[1] == i) frame[i].selectArray[1] = 1;
    if (oGame.characterSelected[2] == i) frame[i].selectArray[2] = 1;
    if (oGame.characterSelected[3] == i) frame[i].selectArray[3] = 1;
}

/**************************************************
 * Retain cursors if backing out from stage select
 *************************************************/
cursor[0] = CursorCreate(xMiddle/3, yMiddle/2  , 0);
if (oGame.characterSelected[0] != -1) {
    cursor[0].selecting = frame[oGame.characterSelected[0]];
}
if (oGame.characterSelected[1] != -1) {
    cursor[1] = CursorCreate(xMiddle*5/3, yMiddle/2  , 1);
    cursor[1].selecting = frame[oGame.characterSelected[1]];
}
if (oGame.characterSelected[2] != -1) {
    cursor[2] = CursorCreate(xMiddle/3, yMiddle/2  , 2);
    cursor[2].selecting = frame[oGame.characterSelected[2]];
}
if (oGame.characterSelected[3] != -1) {
    cursor[3] = CursorCreate(xMiddle*5/3, yMiddle/2  , 3);
    cursor[3].selecting = frame[oGame.characterSelected[3]];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/****************************************
 *Animate character thumbnails in
 ****************************************/
timerIn++;

for (var i = 0; i &lt; 8; i++) {
    if (timerIn &gt; delay * i &amp;&amp; timerIn &lt; duration + delay * i) {
        pos[2*i+1] = easeOutCubic(timerIn - delay * i, startPosition[2*i+1], -startPosition[2*i+1] + endPosition[2*i+1], duration);
        pos[2*i]   = easeOutCubic(timerIn - delay * i, startPosition[2*i]  , -startPosition[2*i]   + endPosition[2*i]  , duration);
        scale[i]   = Approach(scale[i], scaleEnd, scaleRate/duration);
    }
}
// TODO add and animate side portraits

/****************************************
 * Animate character thumbnails out
 ****************************************/
if (confirm) {
    
    timerOut ++;
    
    // Remove cursors
    if (instance_exists(oCursor)) instance_destroy(oCursor);
    
    // Scroll up from bottom
    for (var i = 0; i &lt; 8; i++) {
        if (timerOut &gt; delay * i &amp;&amp; timerOut &lt; duration + delay * i) {
            pos[2*i+1] = easeOutCubic(timerOut - delay * i, endPosition[2*i+1], 1200 - endPosition[2*i+1], duration);
            pos[2*i]   = endPosition[2*i];
            scale[i]   = Approach(scale[i], scaleStart, 1/duration);
            alpha -= 1/duration;
        }
        if (timerOut &gt; duration + 8*delay) {
            room_goto(rmStageSelect);
        }
    } 
}

/****************************************
 * Add players if they press start
 ****************************************/
if (gamepad_button_check(0,gp_start) &amp;&amp; cursor[0] == -1 ) {
    cursor[0] = CursorCreate(xMiddle/3, yMiddle/2  , 0);
    oGame.numPlayers++
}
if (gamepad_button_check(1,gp_start) &amp;&amp; cursor[1] == -1 ) {
    cursor[1] = CursorCreate(xMiddle*3/2, yMiddle/2  , 1);
    oGame.numPlayers++
}
if ((gamepad_button_check(2,gp_start) || keyboard_check_pressed(vk_enter)) &amp;&amp; cursor[2] == -1 ) {
    cursor[2] = CursorCreate(xMiddle/3  , yMiddle*1.5, 2);
    oGame.numPlayers++
}
if (gamepad_button_check(3,gp_start) &amp;&amp; cursor[3] == -1 ) {
    cursor[3] = CursorCreate(xMiddle*5/3, yMiddle*1.5, 3);
    oGame.numPlayers++
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(16,100,"numplayers: " + string(oGame.numPlayers));
draw_text(16,120,"numLockedIn: " + string(oCharacterSelect.numLockedIn));
draw_text(16,160,"characterSelected: " + string(oGame.characterSelected[0]));
//draw_text(16,180,"cursor2: " + string(cursor[2]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw background
draw_background(bgCharacterSelect,0,0);

if (cursor[0] == -1) draw_sprite_ext(sPressStartText, 0, 960/3,   576/2, 1,1,0,c_white,alpha);
if (cursor[1] == -1) draw_sprite_ext(sPressStartText, 0, 960*5/3, 576/2, 1,1,0,c_white,alpha);
if (cursor[2] == -1) draw_sprite_ext(sPressStartText, 0, 960/3  , 576*1.5, 1,1,0,c_white,alpha);
if (cursor[3] == -1) draw_sprite_ext(sPressStartText, 0, 960*5/3, 576*1.5, 1,1,0,c_white,alpha);

if (numLockedIn == oGame.numPlayers &amp;&amp; oGame.numPlayers != 0) draw_sprite_ext(sReadyToFight, 0, 960, 900, 1,1,0,c_white,alpha);

draw_sprite(sBackArrow, oGame.backTimer/2, 450, 32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
